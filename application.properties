#logging.level.org.springframework.boot.autoconfigure=DEBUG

server.port: 6767
#server.ssl.key-store: keystore.p12
#server.ssl.key-store-password: @ptimal$y$
#server.ssl.keyStoreType: PKCS12
#server.ssl.keyAlias: server



security.basic.enable=false
server.tomcat.max-threads: 10
server.connection-timeout=10000


spring.datasource.yanbu.url= jdbc:mysql://dev.advintic.com:3306/HIS_INTEG?createDatabaseIfNotExist=true&autoReconnect=true&useSSL=false&useUnicode=yes&characterEncoding=UTF-8
spring.datasource.yanbu.username=root
spring.datasource.yanbu.password=Optimal03ADV15SYS
spring.datasource.yanbu.driverClassName=com.mysql.jdbc.Driver
spring.datasource.yanbu.dbHost=dev.advintic.com
spring.datasource.yanbu.dbPort=3306
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.yanbu.testWhileIdle = true
spring.datasource.yanbu.validationQuery = SELECT 1

yanbu.lisenter.db.activate = False

spring.datasource.irc.url=jdbc:sqlserver://;serverName=172.27.76.204;port=1433;databaseName=IntuiteIntegration
spring.datasource.irc.username=IntuiteUser1
spring.datasource.irc.password=user1
spring.datasource.irc.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.SQLServer2012Dialect
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.irc.testWhileIdle = true
spring.datasource.irc.validationQuery = SELECT 1
irc.lisenter.db.activate = False


# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project

#spring.jpa.hibernate.ddl-auto = update

spring.jpa.properties.hibernate.type=trace
# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect =org.hibernate.dialect.MySQL5Dialect

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE


logging.level.org.springframework.web.client.RestTemplate=DEBUG
logging.level.org.apache.http=DEBUG
logging.level.httpclient.wire=DEBUG


logging.file = server.log

spring.thymeleaf.cache=false
spring.thymeleaf.check-template=true
spring.thymeleaf.check-template-location=true
spring.thymeleaf.content-type=text/html
spring.thymeleaf.enabled=true
spring.thymeleaf.encoding=UTF-8
#spring.thymeleaf.mode=HTML
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.http.multipart.max-file-size=100MB
spring.http.multipart.max-request-size=100MB



hl7.host=172.27.76.204
#hl7.host=stage.advintic.com
hl7.port=4575

mpps.aet=MPPSSCP
mpps.port=11114


pacs.host=stage.advintic.com
pacs.port=3336
pacs.ae=PACSV

viewer.url=http://localhost:8888/viewer


carev.integration.mpps.getreportData.url=http://dev.advintic.com:8000/api/method/maestro.healthcare.api.get_exmination_data
carev.integration.mpps.get_status.url=http://dev.advintic.com:8000/api/method/maestro.healthcare.api.get_exmination_status
carev.integration.mpps.url=http://dev.advintic.com:8000/api/method/maestro.healthcare.api.update_exmination_status
carev.integration.mpps.key=8b0d9e7ec8ac2de
carev.integration.mpps.secret=343122962e91842

carev.integration.claim.url=http://dev.advintic.com:8000/api/method/maestro.healthcare.healthcare_systems_integrations.irc_system.irc.claim_data_listener
carev.integration.claim.key=8b0d9e7ec8ac2de
carev.integration.claim.secret=343122962e91842



